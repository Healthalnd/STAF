HomePage.Label.AdminTool=//h2[contains(text(), 'User Administration Tool')]
HomePage.Icon.SearchForSomething=//li[@class='u-hard--left']
HomePage.Text.ProfileName=//span[@class='c-profile__name']
HomePage.Icon.DashBoard=//div[@data-id='dashboard']
HomePage.Icon.CaseNavigation=//div[@data-id='caseNavigation']
HomePage.Icon.Admin=//div[@data-id='admin']
Admin.Button.CreateNewUser=//a[@class='k-button k-button-icontext k-grid-add']
Admin.Table.ID=(//a[contains(text(),'Id')])[1]
Admin.Table.DomainId=//a[contains(text(),'Domain Id')]
Admin.Table.FirstName=//a[contains(text(),'First Name')]
Admin.Table.LastName=//a[contains(text(),'Last Name')]
Admin.Table.FullName=//a[contains(text(),'Full Name')]
Admin.Table.Speciality=//a[contains(text(),'Speciality')]
Admin.Table.LUD=//a[contains(text(),'Last Update Date')]
Admin.Table.OrgName=//a[contains(text(),'Org. Name')]
Admin.Table.Active=//a[contains(text(),'Active')]
CreateNewUser.Text.Title=//span[contains(text(),'Create New User')]
CreateNewUser.TextBox.DomainId=//input[@name='domainId']
CreateNewUser.TextBox.FirstName=//input[@name='firstName']
CreateNewUser.TextBox.LastName=//input[@name='lastName']
CreateNewUser.Button.Create=//a[@class='k-button k-button-icontext k-primary k-grid-update']
CreateNewUser.Button.Update=//a[@class='k-button k-button-icontext k-primary k-grid-update']
CreateNewUser.Text.ErrDomainIDCreate=//div[contains(text(), 'Unable to create')]
CreateNewUser.Text.ErrDomainID=//div[@class='k-widget k-tooltip k-tooltip-validation k-invalid-msg']
CreateNewUser.Text.ErrDomainIDNum=//div[contains(text(), 'domainId received: 200')]
CreateNewUser.Text.ErrFirstName=//div[@data-for='firstName']
CreateNewUser.Text.ErrLastName=//div[@data-for='lastName']
CreateNewUser.Button.Cancel=//a[@class='k-button k-button-icontext k-grid-cancel']
Admin.Filter.ID=(//span[@class='k-icon k-filter'])[1]
Admin.Filter.DomainID=(//span[@class='k-icon k-filter'])[2]
Admin.Filter.FirstName=(//span[@class='k-icon k-filter'])[4]
Admin.Filter.LastName=(//span[@class='k-icon k-filter'])[6]
Admin.Filter.Speciality=(//span[@class='k-icon k-filter'])[7]
Admin.Filter.LUD=(//span[@class='k-icon k-filter'])[13]
Admin.Filter.OrgName=(//span[@class='k-icon k-filter'])[14]
Admin.Filter.Active=(//span[@class='k-icon k-filter'])[18]
Active.CheckBox.IsTrue=(//input[@name='filters[0].value'])[1]
Active.CheckBox.IsFalse=(//input[@name='filters[0].value'])[2]
Admin.Label.ID=//a[contains(@class, 'k-link') and text() = 'Id']
Admin.Label.DomainID=//a[contains(@class, 'k-link') and text() = 'Domain Id']
Admin.Label.FirstName=//a[contains(@class, 'k-link') and text() = 'First Name']
Admin.Label.LastName=//a[contains(@class, 'k-link') and text() = 'Last Name']
Admin.Label.Speciality=//a[contains(@class, 'k-link') and text() = 'Speciality']
Admin.Label.LUD=//a[contains(@class, 'k-link') and text() = 'Last Update Date']
Admin.Label.OrgName=//a[contains(@class, 'k-link') and text() = 'Org. Name']
Admin.Label.Active=//a[contains(@class, 'k-link') and text() = 'Active']
DomainID.TextBox.StartsWith=//input[@data-bind='value:filters[0].value']
DomainID.Button.Filter=(//button[@class='k-button k-primary'])[1]
CreateNewUser.DropDown.Practices=(//div[@class='k-multiselect-wrap k-floatwrap'])[1]
Practices.DropDown.Option1=html/body/div[4]/div/ul/li[1]
Practices.DropDown.Option2=html/body/div[4]/div/ul/li[2]
CreateNewUser.Button.Close=(//span[contains(text(),'Close')])[3]
View.Button.Close=(//span[contains(text(),'Close')])[1]
HomePage.Button.NavigationLast=//span[@class='k-icon k-i-seek-e']
HomePage.Button.NavigationFirst=//span[@class='k-icon k-i-seek-w']
User.Button.Edit=//span[@class='k-icon k-edit']
User.Button.View=//a[@class='k-button k-button-icontext k-grid-View']
User.Button.Delete=//a[@class='k-button k-button-icontext k-grid-Delete']
Permissions.DropDown.Program=//span[contains(text(),'Select Program...')]
Program.Option.HH=//li[contains(@class, 'k-item') and text() = 'HealthHome']
Program.Option.HF=(//li[contains(@class, 'k-item') and text() = 'PBCM'])[2]
Program.Option.CC=(//li[contains(@class, 'k-item') and text() = 'CareConnect'])[3]
Program.Option.HC=(//li[contains(@class, 'k-item') and text() = 'HouseCalls'])[4]
Program.Option.Default=//li[contains(@class, 'k-item') and text() = 'DefaultProgram']
Permissions.DropDown.PrimaryRoles=//span[contains(text(),'Select Primary Role...')]
PrimaryRoles.HHOption.PCP=//li[contains(@class, 'k-item') and text() = 'Primary Care Provider']
PrimaryRoles.HFOption.PCP=(//li[contains(@class, 'k-item') and text() = 'Primary Care Provider'])[2]
PrimaryRoles.CCOption.PCP=(//li[contains(@class, 'k-item') and text() = 'Primary Care Provider'])[3]
PrimaryRoles.Option.Surgeon=//li[contains(@class, 'k-item') and text() = 'Surgeon']
Permissions.DropDown.HHApplicationRoles=(//div[@class='k-multiselect-wrap k-floatwrap'])[2]
ApplicationRoles.HHOption.SystemAdmin=//li[contains(@class, 'k-item k-state-focused') and text() = 'System Administrator']
ApplicationRoles.HFOption.SystemAdmin=(//li[contains(@class, 'k-item k-state-focused') and text() = 'System Administrator'])[2]
ApplicationRoles.CCOption.SystemAdmin=(//li[contains(@class, 'k-item k-state-focused') and text() = 'System Administrator'])[3]
Permissions.DropDown.HFApplicationRoles=(//div[@class='k-multiselect-wrap k-floatwrap'])[3]
Permissions.DropDown.CCApplicationRoles=(//div[@class='k-multiselect-wrap k-floatwrap'])[4]
Permissions.DropDown.HCApplicationRoles=(//div[@class='k-multiselect-wrap k-floatwrap'])[26]
ApplicationRoles.Option.ProgramNavigator=//li[contains(@class, 'k-item') and text() = 'Program Navigator']
Permissions.Button.Add=//span[@class='k-icon k-si-plus']
Permissions.Button.Remove=(//span[@class='k-icon k-si-minus'])[1]
View.Text.Specialty=//li[contains(text(), 'Specialty :')]
View.Text.CreatedWhen=//li[contains(text(), 'Created When :')]
View.Text.CreatedBy=//li[contains(text(), 'Created By :')]
View.Text.TouchedWhen=//li[contains(text(), 'Touched When :')]
View.Text.TouchedBy=//li[contains(text(), 'Touched By :')]
View.Text.OrgName=//li[contains(text(), 'Organization Name :')]
View.Text.Active=//li[contains(text(), 'Active :')]
UserDelete.Text.Title=//span[contains(text(),'User Delete Confirmation')]
UserDelete.Button.Yes=//button[@id='yesButton']
UserDelete.Button.No=//button[@id='noButton']
HomePage.Button.UserDelete=//a[contains(@style,'display: none') and contains(text(), 'Delete')]
Edit.CheckBox.Active=//input[@name='active']
User.Value.Active=//div[@id='userAdminGrid']/div[1]/div/div[3]/table/tbody/tr/td[18]
Edit.Label.Permissions=//label[contains(text(), 'Permissions')]
Permissions.Button.Delete=(//div[@class='js-pr-dropdown-button col-md-2']/button/span)[1]
Edit.Text.Specialty=//input[@name='specialty']
Edit.Text.OrgName=//input[@name='organizationName']
Edit.CheckBox.Active=//input[@name='active']
ID.TextBox.StartsWith=(//input[@data-bind='value:filters[0].value'])[1]
Filter.Text.ID=//input[@data-role='numerictextbox']
ID.Button.Clear=(//button[@type='reset'])[1]
ID.Button.Submit=(//button[@class='k-button k-primary'])[1]
Filter.DropDown.ID=html/body/div[4]/form/div[1]/span[1]/span/span[2]/span
ID.Value.NotEqual=(//li[contains(@class, 'k-item') and text() = 'Is not equal to'])[1]
ID.Value.IsGreatEq=(//li[contains(@class, 'k-item') and text() = 'Is greater than or equal to'])[1]
ID.Value.IsGreat=(//li[contains(@class, 'k-item') and text() = 'Is greater than'])[1]
ID.Value.IsLessEq=(//li[contains(@class, 'k-item') and text() = 'Is less than or equal to'])[1]
ID.Value.IsLess=(//li[contains(@class, 'k-item') and text() = 'Is less than'])[1]
DomainID.Value.IsEqTo=(//li[contains(@class, 'k-item') and text() = 'Is equal to'])[1]
DomainID.Value.IsNotEq=(//li[contains(@class, 'k-item') and text() = 'Is not equal to'])[1]
LUD.Value.IsBefore=//li[contains(@class, 'k-item') and text() = 'Is before']
LUD.Value.IsBeforeEq=//li[contains(@class, 'k-item') and text() = 'Is before or equal to']
LUD.Value.NotEq=(//li[contains(@class, 'k-item') and text() = 'Is not equal to'])[5]
LUD.Value.IsAfterEq=//li[contains(@class, 'k-item') and text() = 'Is after or equal to']
LUD.Value.IsAfter=//li[contains(@class, 'k-item') and text() = 'Is after']
Permissions.DropDown.HealthHome=//span[contains(text(), 'HealthHome')]
Permissions.DropDown.Default=//span[contains(text(), 'DefaultProgram')]
Default.Button.Delete=(//button[@role='button'])[24]

Provider.DropDown.Select=//span[@class='k-input' and contains(text(), 'Select Provider')]
Group.Option.Value=(//div[@class='k-multiselect-wrap k-floatwrap'])[1]
Provider.Button.Add=(//button[@data-role='button'])[1]
Provider.Button.Remove=(//button[@data-role='button'])[1]
Provider.Value.EAC=//li[contains(@class, 'k-item') and text() = 'EAC']
ID.Value.Row1=//table/tbody/tr[1]/td[1]
DomainID.Value.Row1=//table/tbody/tr[1]/td[2]
FirstName.Value.Row1=//table/tbody/tr[1]/td[4]
LastName.Value.Row1=//table/tbody/tr[1]/td[6]
Specialty.Value.Row1=//table/tbody/tr[1]/td[7]
OrgName.Value.Row1=//table/tbody/tr[1]/td[14]
Group.GroundUp.Delete=(//span[@class='k-icon k-i-close' and contains(text(), 'delete')])[3]


